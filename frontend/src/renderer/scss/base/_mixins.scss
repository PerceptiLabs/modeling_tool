/// Hides the text in an element, commonly used to show an image. Some elements will need block-level styles applied.
///
/// @link http://zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement
///
/// @example scss - Usage
///   .element {
///     @include hide-text;
///   }
///
/// @example css - CSS Output
///   .element {
///     overflow: hidden;
///     text-indent: 101%;
///     white-space: nowrap;
///   }
///
@mixin hide-text {
  overflow: hidden;
  text-indent: 101%;
  white-space: nowrap;
}

/// Mixin for styling form-placeholders
/// @example scss - Usage
///   @include placeholder {
///    color: #333;
///   }
///
///   input[type='text'],
///   input[type='tel'],
///   input[type='email'] {
///     @include placeholder {
///      color: red;
///     }
///   }

@mixin placeholder {
  &::-webkit-input-placeholder {@content}
  &::-moz-placeholder {opacity: 1; @content}
  &:-moz-placeholder {@content}
  &:-ms-input-placeholder {@content}
  &.placeholder {@content}
}


/**
* Single property transition mixin
*/

@mixin multi-transition($properties-list...) {
  transition-duration: $animation-speed;
  //transition-timing-function: ease-in-out;
  transition-property: $properties-list;
}


@mixin sizes($width, $height: $width) {
  width: $width;
  height: $height;
}

@mixin absolute-center() {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin spread-map($map: ()) {
  @each $key, $value in $map {
      #{$key}: $value;
  }
}

@function theme-var($key, $fallback: null, $map: $theme-map-light) {
  @if not map-has-key($map, $key) {
      @error "key: '#{$key}', is not a key in map: #{$map}";
  }
  @if ($fallback) {
      @return var($key, $fallback);
  } @else {
      @return var($key);
  }
}