apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: training-worker
  name: training-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: training-worker
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: training-worker
    spec:
      {{- with .Values.imageCredentials.name }}
      imagePullSecrets:
        - name: {{ . }}
      {{- end }}
      initContainers:
        - name: make-data-dir
          image: {{ .Values.bash_host.image | quote }}
          command: ['mkdir', '-p', '/plabs/data']
          volumeMounts:
            - name: plabs
              mountPath: /plabs
          imagePullPolicy: {{ .Values.bash_host.pull_policy | default "IfNotPresent" | quote }}
      containers:
        - name: worker
          {{- if .Values.training.docker_image_override }}
          image: {{ .Values.training.docker_image_override | quote }}
          {{- else }}
          image: "{{ .Values.training.docker_repo }}:{{ required "pl_docker_tag is a required value" .Values.pl_docker_tag }}"
          {{- end }}
          imagePullPolicy: {{ .Values.training.pull_policy | default "IfNotPresent" | quote }}
          # TODO parameterize the worker queue
          command: ["python", "run_worker_from_config.py", "training_worker_cpu"]
          env:
            - name: container
              value: a
            - name: HOME
              value: /perceptilabs
            - name: PL_REDIS_URL
              value: redis://{{ .Values.redis_host }}
            - name: PL_RENDER_LOG_LEVEL
              value: {{ .Values.log_level }}
            - name: PL_RYGG_BASE_URL
              value: http://rygg
          ports:
            - containerPort: 8000
          resources: {}
          volumeMounts:
            - mountPath: /perceptilabs/Documents/Perceptilabs
              name: plabs
            - mountPath: /opt/app-root/src/queues.yaml
              subPath: queues.yaml
              name: queues-config
              readOnly: true
          resources:
            # TODO: these are tied to cluster- and environment-specific considerations
            # move them out of this base definition
            requests:
              memory: "12Gi"
              cpu: "3.0"
            limits:
              memory: "12Gi"
              cpu: "3.0"
      restartPolicy: Always
      volumes:
        - name: plabs
          persistentVolumeClaim:
            claimName: plabs
        - name: queues-config
          configMap:
            name: queues-config
            items:
              - key: queues.yaml
                path: queues.yaml
