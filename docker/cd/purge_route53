#!/usr/bin/env bash

# purges route53 of any "A" records for perceptilabshosting.com that don't point to active EC2 instances

if [ $# -ne 1 ] && [ -z "${AWS_DEFAULT_REGION}" ]; then
  echo "USAGE $0 <aws-region>"
  exit 1
elif [ $# -eq 1 ]; then
  export AWS_DEFAULT_REGION=$1

# implied else: AWS_DEFAULT_REGION is already set
fi

DOMAIN=perceptilabshosting.com.

# AWS cli defaults stdout to 'less', which isn't what you want in a script
export AWS_PAGER=''

set -Eeou pipefail

pl_hosting_id=$(aws route53 list-hosted-zones --query "HostedZones[?Name=='${DOMAIN}'] | [0].Id" --output text)
remove_route53_record(){
  if [ -z "$1" ] || [ -z "$2" ] || [ -z "$3" ]; then
    echo "Integration error"
    exit 1
  fi

  batch=$( cat << EOF
  {
    "Comment": "DELETE $1",
    "Changes": [{
      "Action": "DELETE",
      "ResourceRecordSet": {
        "Name": "$1",
        "Type": "A",
        "TTL": $3,
        "ResourceRecords": [{ "Value": "$2"}]
      }
    }]
  }
EOF
)

  aws route53 change-resource-record-sets \
    --hosted-zone-id ${pl_hosting_id} \
    --change-batch "$batch" \
    --output json \
    > /dev/null
}

get_all_zone_records(){
  QUERY="ResourceRecordSets[?Type=='A'].{Name: Name, Ip: ResourceRecords[0].Value, TTL: TTL}"
  aws route53 list-resource-record-sets --hosted-zone-id ${pl_hosting_id} --query "${QUERY}" | \
    jq '.[] | [.Ip, .Name, .TTL] | @tsv' --raw-output | \
    sort -k 1 -t$'\t' \
    > ${zones}
}

get_active_ips(){
  QUERY="Reservations[].Instances[].PublicIpAddress"
  aws ec2 describe-instances --query "${QUERY}" --output json | \
    jq '.[]' -r | \
    sort \
    > ${active}
}

zones=$(mktemp)
active=$(mktemp)
to_remove=$(mktemp)

get_all_zone_records
get_active_ips

join -11 -21 -v1 ${zones} ${active} > ${to_remove}

if [ -s ${to_remove} ]; then
  echo "Removing these records:"
  cat ${to_remove}
fi


while IFS=' ' read -r ip name ttl; do
  remove_route53_record $name $ip $ttl
done < ${to_remove}

rm -f ${active} ${zones} ${to_remove}

