apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: db
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: db
    spec:
      {{- with .Values.imageCredentials.name }}
      imagePullSecrets:
        - name: {{ . }}
      {{- end }}
      containers:
        - name: db
          image: {{ .Values.db.docker_image | quote }}
          imagePullPolicy: {{ .Values.db.pull_policy | default "IfNotPresent" | quote }}
          env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            - name: POSTGRES_DB
              value: {{ .Values.db_name | quote }}
            - name: POSTGRES_USER
              value: {{ .Values.db_user | quote }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.db_pass | quote }}
          livenessProbe:
            exec:
              command:
                - bash
                - -c
                - pg_isready --username=rygg
            failureThreshold: 5
            initialDelaySeconds: 60
            periodSeconds: 5
            timeoutSeconds: 10
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: pg-db
      restartPolicy: Always
      volumes:
        - name: pg-db
          persistentVolumeClaim:
            claimName: pg-db
