trigger:
- none

variables:
  # CommitId is passed in to the app_variables.json file
- name: BuildVariables.CommitId
  value: $(Build.SourceVersion)
- name: savetolatest
  ${{ if eq( variables['Build.SourceBranch'], 'refs/heads/master') }}:
    value: true
  ${{ if ne( variables['Build.SourceBranch'], 'refs/heads/master') }}:
    value: false

jobs:
  - job: startvm
    displayName: Start Worker
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: AWSShellScript@1
      inputs:
        awsCredentials: 'aws'
        regionName: 'us-east-2'
        scriptType: 'inline'
        inlineScript: 'aws ec2 start-instances --instance-ids i-02d83a036ea61ccd1 --region us-east-2'
        failOnStandardError: true

  - job: dockerbuild
    dependsOn: startvm
    strategy:
      matrix:
        # kernel:
        #   target: kernel
        #   repository: kernel
        frontend:
          target: frontend
          repository: frontend
        rygg:
          target: rygg
          repository: rygg
    pool: Docker Build

    steps:
    - checkout: self
      clean: true
      submodules: recursive
      persistCredentials: true

    - task: FileTransform@2
      inputs:
        folderPath: '$(System.DefaultWorkingDirectory)/'
        xmlTransformationRules:
        jsonTargetFiles: '**/app_variables.json'

    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.6'
        architecture: 'x64'
        addToPath: true

    - bash: |
        cd scripts/
        python build.py docker $(target)
      displayName: 'Assemble'

    - task: Docker@2
      inputs:
        containerRegistry: 'perceptilabs'
        repository: $(repository)
        command: 'buildAndPush'
        Dockerfile: 'build/docker/$(target)/Dockerfile'

  - job: installation_files
    dependsOn: dockerbuild
    pool: Docker Build
    steps:

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/docker/compose/system_migrations'
        includeRootFolder: true
        archiveType: 'tar'
        archiveFile: '$(Build.ArtifactStagingDirectory)/system_migrations.tar.gz'
        replaceExistingArchive: true

    - task: CopyFiles@2
      displayName: Copy installer to staging
      inputs:
        Contents: |
          docker/compose/install_perceptilabs_enterprise
          docker/compose/system_migrations.tar.gz
        TargetFolder: $(Build.ArtifactStagingDirectory)
        flattenFolders: true

    - task: PublishBuildArtifacts@1
      displayName: Publish Build Artifacts for Release Version
      inputs:
        PathtoPublish: $(Build.ArtifactStagingDirectory)
        ArtifactName: 'installation'
        publishLocation: 'Container'

    - task: Bash@3
      displayName: Create Enterprise Installer for Development Version
      inputs:
        targetType: 'inline'
        script: |
          set -Eeuo pipefail

          sed --in-place "s|INVALID_VERSION|${BUILDNUM}|g" install_perceptilabs_enterprise
          sed --in-place "s|INVALID_REGISTRY|${CONTAINER_REGISTRY}|g" install_perceptilabs_enterprise
          sed --in-place "s|^DOCKER_USERNAME=.*$|DOCKER_USERNAME=${DOCKER_USERNAME}|g" install_perceptilabs_enterprise
          sed --in-place "s|^AZURE_BLOB_URL=.*$|AZURE_BLOB_URL=${AZURE_BLOB_URL}|g" install_perceptilabs_enterprise

          chmod +x install_perceptilabs_enterprise

        workingDirectory: $(Build.ArtifactStagingDirectory)
        failOnStderr: true
      env:
        BUILDNUM: $(Build.BuildId)
        AZURE_BLOB_URL: https://perceptilabs.blob.core.windows.net/enterprisedev
        DOCKER_USERNAME: perceptilabsreader
        CONTAINER_REGISTRY: perceptilabs.azurecr.io

    - task: PublishBuildArtifacts@1
      displayName: Publish Build Artifacts for Development Version
      inputs:
        PathtoPublish: $(Build.ArtifactStagingDirectory)
        ArtifactName: 'installation_dev'
        publishLocation: 'Container'

  - job: pushfiles
    displayName: Publish files to Azure storage
    dependsOn: installation_files
    pool: Docker Build
    steps:
      - task: DownloadBuildArtifacts@0
        displayName: Fetch artifacts from the previous job
        inputs:
          buildType: 'current'
          downloadType: 'specific'
          itemPattern: |
            installation_dev/system_migrations.tar.gz
            installation_dev/install_perceptilabs_enterprise
          downloadPath: '$(System.ArtifactsDirectory)'

      - task: AzureCLI@2
        displayName: publish the installation files to $(Build.BuildId)
        inputs:
          azureSubscription: 'Perceptilabs Azure'
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            az storage blob upload --account-name=perceptilabs --container-name=enterprisedev --file=$(System.ArtifactsDirectory)/installation_dev/system_migrations.tar.gz --name=$(Build.BuildId)/system_migrations.tar.gz
            az storage blob upload --account-name=perceptilabs --container-name=enterprisedev --file=$(System.ArtifactsDirectory)/installation_dev/install_perceptilabs_enterprise --name=$(Build.BuildId)/install_perceptilabs_enterprise
          addSpnToEnvironment: true
          useGlobalConfig: true

      - task: AzureCLI@2
        displayName: publish the installation files to latest
        condition: eq(${{ variables['savetolatest'] }}, true)
        inputs:
          azureSubscription: 'Perceptilabs Azure'
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            az storage blob upload --account-name=perceptilabs --container-name=enterprisedev --file=$(System.ArtifactsDirectory)/installation_dev/system_migrations.tar.gz --overwrite true --name=latest/system_migrations.tar.gz
            az storage blob upload --account-name=perceptilabs --container-name=enterprisedev --file=$(System.ArtifactsDirectory)/installation_dev/install_perceptilabs_enterprise --overwrite true --name=latest/install_perceptilabs_enterprise
          addSpnToEnvironment: true
          useGlobalConfig: true

      - task: Bash@3
        displayName: Build the chart and make an updated index
        inputs:
          filePath: '$(Build.SourcesDirectory)/docker/cloud/makehelm'
          arguments: 'build $(Build.BuildId) $(Build.ArtifactStagingDirectory)'

      - task: PublishBuildArtifacts@1
        displayName: Save chart build artifact
        inputs:
          PathtoPublish: '$(artifact_chart)'
          ArtifactName: 'chart'
          publishLocation: 'Container'

      - task: AzureCLI@2
        displayName: Push the helm chart and updated index to azure blob storage
        inputs:
          azureSubscription: 'Perceptilabs Azure'
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            az storage blob upload --account-name=perceptilabs --container-name=saas --file=$(artifact_chart) --overwrite true --name=$(artifact_name)
            az storage blob upload --account-name=perceptilabs --container-name=saas --file=$(artifact_index) --overwrite true --name=index.yaml
          addSpnToEnvironment: true
          useGlobalConfig: true

  - job: stopvm
    dependsOn: pushfiles
    pool:
      vmImage: ubuntu-latest
    displayName: Stop the build machine
    steps:
    - task: AWSShellScript@1
      inputs:
        awsCredentials: 'aws'
        regionName: 'us-east-2'
        scriptType: 'inline'
        inlineScript: 'aws ec2 stop-instances --instance-ids i-02d83a036ea61ccd1 --region us-east-2'
        failOnStandardError: true
