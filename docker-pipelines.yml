trigger:
- none

pool: Docker Build

variables:
  # CommitId is passed in to the app_variables.json file
  BuildVariables.CommitId : $(Build.SourceVersion)

jobs:
  - job: dockerbuild
    strategy:
      matrix:
        kernel:
          target: kernel
          repository: kernel
        frontend:
          target: frontend
          repository: frontend
        rygg:
          target: rygg
          repository: rygg
    pool:
      vmImage: 'ubuntu-16.04'

    steps:
    - checkout: self
      clean: true
      submodules: recursive
      persistCredentials: true

    - task: FileTransform@2
      inputs:
        folderPath: '$(System.DefaultWorkingDirectory)/'
        xmlTransformationRules:
        jsonTargetFiles: '**/app_variables.json'

    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.6'
        architecture: 'x64'
        addToPath: true

    - bash: |
        cd scripts/
        python build.py docker $(target)
      displayName: 'Assemble'

    - task: Docker@2
      inputs:
        containerRegistry: 'perceptilabs'
        repository: $(repository)
        command: 'buildAndPush'
        Dockerfile: 'build/docker/$(target)/Dockerfile'

  - job: installation_files
    dependsOn: dockerbuild
    steps:

    - task: CopyFiles@2
      displayName: Copy installer to staging
      inputs:
        SourceFolder: 'docker/compose/'
        Contents: 'install_perceptilabs_enterprise'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: CopyFiles@2
      displayName: Copy docker-compose to staging
      inputs:
        SourceFolder: 'docker/compose/'
        Contents: 'docker-compose.yml'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      displayName: Publish Build Artifacts
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'installation'
        publishLocation: 'Container'
