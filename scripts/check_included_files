#!/usr/bin/env bash
set -Eeuo pipefail

if [ $# -ne 1 ]; then
  echo "USAGE $0 <dir>"
  exit 1
fi

dir=$1
expected=$(mktemp)
present=$(mktemp)
exceptions=$(mktemp)
COMMENT="^#"
BLANK="^$"

rc=0
report_error(){
  if echo "$1" | grep -q .; then
    echo "================================="
    echo $2
    echo "$1"
    rc=1
  fi
}

pushd $dir > /dev/null
# find mismatches between included_files.txt and actual files
# exclude extras and missing that are listed as literals in the exceptions
cat included_files_exceptions.txt | awk "/^literal:/" | sed "s/^literal://g" | sort > "${exceptions}"
cat included_files.txt | grep -v "\(${COMMENT}\|${BLANK}\)" | sort > "${expected}"
git ls-tree --name-only -r HEAD | sort > "${present}"

# extra files are ones that are present and not expected and not in exclusions
extra_files=$(join -v 1 "${present}" "${expected}" | join -v 2 "${exceptions}" -)
# pare down the extra files by patterns in included_files_exceptions
reject_patterns=$(cat included_files_exceptions.txt| awk "/^regex:/" | sed "s/regex://g")
for l in $reject_patterns; do
  extra_files=$(echo "$extra_files" | awk "$l") || true
done


missing_files=$(join -v 2 "${present}" "${expected}" | join -v 2 "${exceptions}" -)

# missing files that are a full prefix (a root dir) of extra files are actually there
# add / to each missing file
without_slash=$(echo "${missing_files}" | sed 's/^\(.*[^\/]\)$/\1/g')

pruned_extra="${extra_files}"

pruned_missing_file=$(mktemp)
# for each file in missing, see if we find it as a prefix n the list of extras. Yes it's O(n^2)

for line in "${without_slash}"; do
  if echo "${extra_files}" | grep -q "^${line}/"; then
    tmp=$(echo "${pruned_extra}" | grep -v "^${line}/") || true
    pruned_extra=${tmp:-""}
  else
    echo "${line}" >> "${pruned_missing_file}"
  fi

done

report_error "${pruned_extra}" "Extra files:"

pruned_missing=$(cat "${pruned_missing_file}")
report_error "${pruned_missing}" "Missing files:"

rm "${expected}" "${present}" "${exceptions}" "${pruned_missing_file}"

popd > /dev/null
exit $rc
