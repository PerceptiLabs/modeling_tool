trigger:
- master

pool:
  vmimage: ubuntu-latest

parameters:
  - name: build_id_to_deploy
    displayName: Build ID to deploy
    type: string

jobs:
  - job: checkvars
    displayName: Check Variables
    steps:
      - task: Bash@3
        condition: not(contains(variables['Build.SourceBranch'], 'refs/tags/'))
        inputs:
          targetType: 'inline'
          script: |
            echo "This pipeline should only be run on git tags"
            fail

      - task: CmdLine@2
        displayName: Check build_id_to_deploy
        condition: eq(${{ parameters.build_id_to_deploy }}, '')
        inputs:
          script: |
            echo build_id_to_deploy was not set
            fail

  - job: dockerrelease
    displayName: Release Docker
    dependsOn: checkvars

    strategy:
      matrix:
        kernel:
          repo: kernel
        frontend:
          repo: frontend
        rygg:
          repo: rygg
    steps:
      - task: docker@2
        displayName: log in to perceptilabs
        inputs:
          containerregistry: 'perceptilabs'
          command: 'login'
          addpipelinedata: false

      - task: Docker@2
        displayName: pull from perceptilabs
        inputs:
          containerRegistry: 'perceptilabs'
          repository: $(repo)
          command: 'pull'
          arguments: 'perceptilabs.azurecr.io/$(repo):${{ parameters.build_id_to_deploy }}'
          addPipelineData: false

      - task: Docker@2
        displayName: retag for perceptilabsenterprise
        inputs:
          containerRegistry: 'perceptilabs'
          repository: $(repo)
          command: 'tag'
          arguments: 'perceptilabs.azurecr.io/$(repo):${{ parameters.build_id_to_deploy }} perceptilabsenterprise.azurecr.io/$(repo):$(Build.SourceBranchName)'
          addPipelineData: false

      - task: Docker@2
        displayName: log in to perceptilabsenterprise
        inputs:
          containerRegistry: 'perceptilabsenterprise'
          command: 'login'

      - task: Docker@2
        displayName: push to perceptilabsenterprise
        inputs:
          containerRegistry: 'perceptilabsenterprise'
          repository: '$(repo)'
          command: 'push'
          tags: '$(Build.SourceBranchName)'

  - job: pushfiles
    displayName: Publish files to Azure storage
    dependsOn: checkvars
    steps:

      - task: DownloadBuildArtifacts@0
        displayName: Download Release Files
        inputs:
          buildType: 'specific'
          project: '54ade330-1468-4064-8c98-7fe751f97330'
          pipeline: '16'
          buildVersionToDownload: 'specific'
          buildId: '${{ parameters.build_id_to_deploy }}'
          downloadType: 'specific'
          itemPattern: |
            **/system_migrations.tar.gz
            **/install_perceptilabs_enterprise
          downloadPath: '$(System.ArtifactsDirectory)'

      - task: Bash@3
        displayName: Set the version in the installer
        inputs:
          targetType: 'inline'
          script: |
            set -eu
            sed --in-place "s|^AZURE_BLOB_URL=.*$|AZURE_BLOB_URL=${AZURE_BLOB_URL}|g" install_perceptilabs_enterprise
            sed --in-place "s|^export CONTAINER_REGISTRY=.*|export CONTAINER_REGISTRY=\"\${CONTAINER_REGISTRY:-${CONTAINER_REGISTRY}}\"|g" install_perceptilabs_enterprise
            sed --in-place "s|^DOCKER_USERNAME=.*$|DOCKER_USERNAME=${DOCKER_USERNAME}|g" install_perceptilabs_enterprise
            sed --in-place "s|^export PL_VERSION=.*|export PL_VERSION=\"\${PL_VERSION:-${PL_VERSION}}\"|g" install_perceptilabs_enterprise
          workingDirectory: '$(System.ArtifactsDirectory)/installation'
          failOnStderr: true
        env:
          AZURE_BLOB_URL: https://perceptilabs.blob.core.windows.net/enterprise
          CONTAINER_REGISTRY: perceptilabsenterprise.azurecr.io
          DOCKER_USERNAME: enterpriseuser
          PL_VERSION: $(Build.SourceBranchName)

      - task: AzureCLI@2
        displayName: publish the installation files to $(Build.SourceBranchName)
        inputs:
          azureSubscription: 'Perceptilabs Azure'
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            az storage blob upload --account-name=perceptilabs --container-name=enterprise --file=$(System.ArtifactsDirectory)/installation/system_migrations.tar.gz --name=$(Build.SourceBranchName)/system_migrations.tar.gz
            az storage blob upload --account-name=perceptilabs --container-name=enterprise --file=$(System.ArtifactsDirectory)/installation/install_perceptilabs_enterprise --name=$(Build.SourceBranchName)/install_perceptilabs_enterprise
          addSpnToEnvironment: true
          useGlobalConfig: true

      - task: AzureCLI@2
        displayName: publish the installation files to latest
        condition: eq(${{ variables['savetolatest'] }}, true)
        inputs:
          azureSubscription: 'Perceptilabs Azure'
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            az storage blob upload --account-name=perceptilabs --container-name=enterprise --file=$(System.ArtifactsDirectory)/installation/system_migrations.tar.gz --name=latest/system_migrations.tar.gz
            az storage blob upload --account-name=perceptilabs --container-name=enterprise --file=$(System.ArtifactsDirectory)/installation/install_perceptilabs_enterprise --name=latest/install_perceptilabs_enterprise
          addSpnToEnvironment: true
          useGlobalConfig: true
